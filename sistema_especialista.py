from experta import *
from regras import *

class Cliente(Fact):
    """Fato representando o cliente e seu problema"""
    pass

# classe para defini√ß√£o das regras que ser√£o utilizadas na classe app
class SuporteTecnico(KnowledgeEngine):
    
    def __init__(self):
        super().__init__()
        self.resposta = "‚ùå Problema n√£o identificado. Por favor, descreva seu problema com mais detalhes."

    # para cada uma das regras, percorremos o vetor das palavras que desejamos comparar e verificamos se haver√° um match com a entrada do usu√°rio
    # (neste caso a vari√°vel x √© o que o usu√°rio digitar√°)
    @Rule(Cliente(problema=P(lambda x: any(re.search(p, x, re.IGNORECASE) for p in PALAVRAS_SAUDACOES))))
    def saudacoes(self):
        self.resposta = "üòÄ Ol√°! Sou seu assistente de suporte t√©cnico. Por favor, descreva seu problema para que eu possa ajudar."
        self.halt()

    @Rule(Cliente(problema=P(lambda x: any(re.search(p, x, re.IGNORECASE) for p in PALAVRAS_BOOT))))
    def problemas_inicializacao(self):
        self.resposta = """üíª Problema de inicializa√ß√£o detectado:
        1. Verifique a conex√£o de energia:
        - Cabo de for√ßa bem conectado
        - Tomada funcionando
        - Luzes do gabinete acesas

        2. Problemas com mem√≥ria RAM:
        - Tente remover e recolocar os pentes de mem√≥ria
        - Teste com um pente de cada vez

        3. Verifique o disco r√≠gido:
        - Acesse a BIOS (geralmente apertando DEL ou F2 durante a inicializa√ß√£o)
        - Confira se o HD/SSD est√° sendo detectado"""
        self.halt()

    @Rule(Cliente(problema=P(lambda x: any(re.search(p, x, re.IGNORECASE) for p in PALAVRAS_VIDEO))))
    def problemas_video(self):
        self.resposta = """üñ•Ô∏è Problema de v√≠deo detectado:
        1. Verifique as conex√µes f√≠sicas:
        - Cabo de v√≠deo bem conectado (tanto na placa quanto no monitor)
        - Teste com outro cabo se poss√≠vel

        2. Problemas com placa de v√≠deo:
        - Se for placa dedicada, verifique os conectores de energia
        - Tente remover e recolocar a placa

        3. Solu√ß√µes de software:
        - Atualize os drivers da placa de v√≠deo
        - Reinstale o driver atual"""
        self.halt()

    @Rule(Cliente(problema=P(lambda x: any(re.search(p, x, re.IGNORECASE) for p in PALAVRAS_FONTE))))
    def problemas_energia(self):
        self.resposta = """üîå Problema de energia detectado:
        1. Verifica√ß√£o b√°sica:
        - Teste outra tomada
        - Verifique se o cabo de for√ßa est√° intacto
        - Cheque se a fonte est√° ligada (bot√£o na parte traseira)

        2. Teste da fonte de alimenta√ß√£o:
        - Desconecte todos os componentes desnecess√°rios
        - Tente ligar com apenas o essencial conectado

        3. Poss√≠veis problemas:
        - Fonte queimada (cheque por cheiro de queimado)
        - Superaquecimento (ventoinha da fonte girando?)"""
        self.halt()

    @Rule(Cliente(problema=P(lambda x: any(re.search(p, x, re.IGNORECASE) for p in PALAVRAS_FIREWALL))))
    def problemas_firewall(self):
        self.resposta = """üõ°Ô∏è Problema com firewall detectado:
        1. Verifica√ß√£o b√°sica:
        - Temporariamente desative o firewall para testes
        - Verifique se o programa est√° na lista de permitidos

        2. Configura√ß√µes avan√ßadas:
        - Verifique as regras de entrada/sa√≠da
        - Confira se o antiv√≠rus n√£o est√° bloqueando

        3. Solu√ß√µes alternativas:
        - Adicione exce√ß√µes para o programa
        - Atualize o software de seguran√ßa"""
        self.halt()

    @Rule(Cliente(problema=P(lambda x: any(re.search(p, x, re.IGNORECASE) for p in PALAVRAS_SEGURANCA))))
    def problemas_seguranca(self):
        self.resposta = """ü¶† Problema de seguran√ßa detectado:
        1. Verifica√ß√£o de v√≠rus:
        - Execute uma verifica√ß√£o completa do sistema
        - Atualize as defini√ß√µes de v√≠rus

        2. Problemas com malware:
        - Use o Windows Defender ou seu antiv√≠rus
        - Execute ferramentas como Malwarebytes

        3. Preven√ß√£o:
        - N√£o clique em links suspeitos
        - Mantenha seu sistema atualizado"""
        self.halt()

    @Rule(Cliente(problema=P(lambda x: any(re.search(p, x, re.IGNORECASE) for p in PALAVRAS_SOFTWARE))))
    def problemas_software(self):
        self.resposta = """üß© Problema de software detectado:
        1. Solu√ß√µes b√°sicas:
        - Reinicie o programa
        - Reinicie o computador

        2. Atualiza√ß√µes:
        - Verifique atualiza√ß√µes para o software
        - Atualize seu sistema operacional

        3. Reinstala√ß√£o:
        - Desinstale completamente o programa
        - Baixe a vers√£o mais recente do site oficial"""
        self.halt()

    @Rule(Cliente(problema=P(lambda x: any(re.search(p, x, re.IGNORECASE) for p in PALAVRAS_REDE))))
    def problemas_rede(self):
        self.resposta = """üì∂ Problema de rede detectado:
        1. Verifica√ß√£o b√°sica:
        - Reinicie o roteador/modem
        - Verifique se outros dispositivos est√£o conectados

        2. Solu√ß√µes para Wi-Fi:
        - Mova-se mais perto do roteador
        - Tente conectar via cabo de rede

        3. Configura√ß√µes:
        - Verifique se o modo avi√£o est√° desligado
        - Esque√ßa a rede e conecte novamente
        - Atualize os drivers de rede"""
        self.halt()

    @Rule(Cliente(problema=P(lambda x: any(re.search(p, x, re.IGNORECASE) for p in PALAVRAS_ARMAZENAMENTO))))
    def problemas_armazenamento(self):
        self.resposta = """üíæ Problema de armazenamento detectado:
        1. Verifica√ß√£o de disco:
        - Execute CHKDSK (Prompt: chkdsk /f C:)
        - Verifique erros com ferramentas como CrystalDiskInfo

        2. Espa√ßo insuficiente:
        - Libere espa√ßo deletando arquivos tempor√°rios
        - Desinstale programas n√£o utilizados

        3. Problemas f√≠sicos:
        - Verifique os cabos SATA/energia
        - Teste o disco em outro computador"""
        self.halt()

    @Rule(Cliente(problema=P(lambda x: any(re.search(p, x, re.IGNORECASE) for p in PALAVRAS_DISPOSITIVOS))))
    def problemas_dispositivos(self):
        self.resposta = """üñ±Ô∏è Problema com dispositivos detectado:
        1. Verifica√ß√£o b√°sica:
        - Reconecte o dispositivo
        - Teste em outra porta USB
        - Tente em outro computador

        2. Problemas com drivers:
        - Atualize os drivers no Gerenciador de Dispositivos
        - Desinstale e deixe o Windows reinstalar

        3. Configura√ß√µes:
        - Verifique as configura√ß√µes de energia (USB selective suspend)
        - Teste sem hubs USB (conecte diretamente no PC)"""
        self.halt()

    @Rule(Cliente(problema=P(lambda x: any(re.search(p, x, re.IGNORECASE) for p in PALAVRAS_AUDIO))))
    def problemas_audio(self):
        self.resposta = """üîä Problema de √°udio detectado:
        1. Verifica√ß√£o b√°sica:
        - Verifique se o som n√£o est√° mudo
        - Confira o dispositivo de sa√≠da selecionado

        2. Problemas com drivers:
        - Atualize drivers no Gerenciador de Dispositivos
        - Reinstale o driver de √°udio

        3. Configura√ß√µes:
        - Verifique o Mixer de Volume (bot√£o direito no √≠cone de som)
        - Teste em diferentes programas (YouTube, Windows Sounds)"""
        self.halt()